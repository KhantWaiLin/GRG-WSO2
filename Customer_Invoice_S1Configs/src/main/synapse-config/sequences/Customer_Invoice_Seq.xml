<?xml version="1.0" encoding="UTF-8"?>
<sequence name="Customer_Invoice_Seq" trace="disable" xmlns="http://ws.apache.org/ns/synapse">
    <propertyGroup>
        <property name="regUrl" scope="default" type="STRING" value="conf:/resources/ResourceData.xml"/>
        <property expression="get-property('registry', $ctx:regUrl)" name="Data" scope="default" type="OM" xmlns:ns="http://org.apache.synapse/xsd"/>
        <property expression="$ctx:Data//ProductList" name="ProductList" scope="default" type="STRING"/>
        <property expression="$ctx:Data//BranchList" name="BranchList" scope="default" type="STRING"/>
        <property expression="$ctx:Data//facility_id" name="facility_id" scope="default" type="STRING"/>
        <property expression="$ctx:Data//Next_Day_Interval" name="Next_Day_Interval" scope="default" type="STRING"/>
    </propertyGroup>
    <script language="js"><![CDATA[var min = mc.getProperty('Next_Day_Interval');
			var todayDate = new Date();
         	var next_run_time = new Date(todayDate.getTime() + min * 60000);
         	mc.setProperty('next_run_time',next_run_time.toLocaleString());]]></script>
    <sequence key="JDE_Auth_Header_Seq"/>
    <property expression="concat(get-property('uri.var.jdeURL'),'/S1_Invoice_Payment_Information')" name="URL" scope="default" type="STRING"/>
    <property expression="fn:substring-after(get-property('MessageID'), 'urn:uuid:')" name="Message_ID" scope="default" type="STRING"/>
    <log level="custom">
        <property expression="get-property('Message_ID')" name="Message ID"/>
    </log>
    <property expression="get-property(&quot;SYSTEM_DATE&quot;, &quot;yyyy-MM-dd'T'HH:mm:ss&quot;)" name="currentDate" scope="default" type="STRING"/>
    <dbreport>
        <connection>
            <pool>
                <driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</driver>
                <url>jdbc:sqlserver://localhost:1433;databaseName=wso2_message_store;encrypt=true;trustServerCertificate=true;</url>
                <user>sa</user>
                <password>B!m5upp0rt</password>
            </pool>
        </connection>
        <statement>
            <sql><![CDATA[INSERT INTO wso2_Scheduler_RunTime Values (?,?,?,?,?,?,?)]]></sql>
            <parameter expression="get-property('Message_ID')" type="VARCHAR"/>
            <parameter expression="get-property('currentDate')" type="VARCHAR"/>
            <parameter type="VARCHAR" value="JDE_DMS"/>
            <parameter expression="get-property('URL')" type="VARCHAR"/>
            <parameter type="VARCHAR" value="S1customerInvoice"/>
            <parameter type="VARCHAR" value="-"/>
            <parameter expression="get-property('next_run_time')" type="VARCHAR"/>
        </statement>
    </dbreport>
    <payloadFactory media-type="json">
        <format>{}</format>
        <args/>
    </payloadFactory>
    <sequence key="SAP_Auth_Seq_SAP_DMS_2"/>
    <filter regex=".+" source="get-property('filter')">
        <then>
            <call>
                <endpoint>
                    <http method="get" uri-template="https://devsapapi.grandroyal-group.com/sap/opu/odata/SAP/ZOD_SDXXI0050_SRV/CustomerInvoiceSet?$filter={filter}">
                        <suspendOnFailure>
                            <initialDuration>-1</initialDuration>
                            <progressionFactor>-1</progressionFactor>
                            <maximumDuration>0</maximumDuration>
                        </suspendOnFailure>
                        <markForSuspension>
                            <retriesBeforeSuspension>0</retriesBeforeSuspension>
                        </markForSuspension>
                    </http>
                </endpoint>
            </call>
        </then>
        <else>
            <call>
                <endpoint>
                    <http method="get" uri-template="https://devsapapi.grandroyal-group.com/sap/opu/odata/SAP/ZOD_SDXXI0050_SRV/CustomerInvoiceSet">
                        <suspendOnFailure>
                            <initialDuration>-1</initialDuration>
                            <progressionFactor>-1</progressionFactor>
                            <maximumDuration>0</maximumDuration>
                        </suspendOnFailure>
                        <markForSuspension>
                            <retriesBeforeSuspension>0</retriesBeforeSuspension>
                        </markForSuspension>
                    </http>
                </endpoint>
            </call>
        </else>
    </filter>
    <property name="API_Name" scope="default" type="STRING" value="S1_Invoice_Payment_Information API"/>
    <property name="API" scope="default" type="STRING" value="JDE"/>
    <property expression="$axis2:HTTP_SC" name="Status" scope="default" type="STRING" xmlns:ns="http://org.apache.synapse/xsd"/>
    <property expression="$ctx:ERROR_CODE" name="ErrorCode" scope="default" type="STRING"/>
    <filter xpath="$ctx:Status != 200">
        <then>
            <property expression="get-property('ERROR_MESSAGE')" name="message" scope="default" type="STRING"/>
            <sequence key="EmailSeq"/>
        </then>
        <else/>
    </filter>
    <log level="custom">
        <property expression="get-property('URL')" name="URL_Route"/>
        <property expression="json-eval($)" name="S1_Invoice_Payment_Information_Response"/>
    </log>
    <script language="js"><![CDATA[payload = mc.getPayloadJSON();

				function FormatDate(dateString) {
				    var timestamp = parseInt(
				        dateString.replace("/Date(", "").replace(")/", ""),
				        10
				    );
				
				    var date = new Date(timestamp);
				
				    var year = date.getFullYear();
				    var month = date.getMonth() + 1;
				    var day = date.getDate();
				
				    var monthStr = month < 10 ? "0" + month : "" + month;
				    var dayStr = day < 10 ? "0" + day : "" + day;
				
				    return year + "-" + monthStr + "-" + dayStr;
				}
				
				function toPlainString(num) {
				    return ('' + +num).replace(/(-?)(\d*)\.?(\d*)e([+-]\d+)/,
				        function (a, b, c, d, e) {
				            return e < 0 ?
				                b + '0.' + Array(1 - e - c.length).join(0) + c + d :
				                b + c + d + Array(e - d.length + 1).join(0);
				        });
				}
				
				var rowset = payload.d.results;
				var log = mc.getServiceLog();
				var mainObject = new Object();
				mainObject.routeName = 'S1customerInvoice';
				mainObject.original_payload = payload;
				mainObject.next_run_time = mc.getProperty('next_run_time');
				mainObject.schedulerId = mc.getProperty('Message_ID');
				mainObject.Array = new Array;
				for (i = 0; i < rowset.length; i++) {
				    var data_row = rowset[i];
				    var item = new Object();
				    item.dms_PO_Offline_Number = data_row.CustomerRefHeader;
				    item.sales_Order_Number = data_row.SalesOrderNumber;
				    item.distributor_Name = "GRG_Distributor";
				    item.discount_Due_Date = data_row.InvoiceDueDate != null ? FormatDate(data_row.InvoiceDueDate) : "";
				    item.discount_Available = data_row.OpenInvoiceAmount;
				    item.original_Document = data_row.OriginalDocument;
				    item.document_Number = data_row.InvoiceNumber;
				    item.doc_Type = data_row.SalesOrderType01;
				
				    BranchList = mc.getProperty('BranchList');
				    BranchList = JSON.parse(BranchList);
				    BranchList = BranchList.Branch;
				    branchCode = data_row.CustomerNumber01.toString().trim();
				    tenantId = "";
				    userId = "";
				    branchId = "";
				    BranchList.forEach(function (value, index, array) {
				        if (value.Branch_code == branchCode) {
				            tenantId = value.TenantId;
				            userId = value.UserID;
				            branchId = value.InternalID;
				        }
				    });
				
				    item.tenant_Id = tenantId;
				    item.gross_Amount = data_row.InvoiceAmount;
				    item.base_Curr = data_row.Currency;
				    item.invoice_date = data_row.InvoiceDate != null ? FormatDate(data_row.InvoiceDate) : "";
				    item.open_Amount = Number(data_row.OpenInvoiceAmount).toFixed(2);
				    item.so_Doc_Type = data_row.SalesOrderType02;
				    item.discount_Taken = data_row.F03B11_ADSA;
				    item.customer_Number = data_row.CustomerNumber02;
				    item.void_Date = data_row.CancelPaymentDate != null ? FormatDate(data_row.CancelPaymentDate) : "";
				    item.remark = data_row.PaymentRemark;
				    item.due_Date = data_row.InvoiceDueDate != null ? FormatDate(data_row.InvoiceDueDate) : "";
				    item.orig_Doc_Type = data_row.BillingType;
				    item.pay_Status = data_row.InvoicePaymentStatus;
				    item.pay_Item = data_row.PaymentItem;
				    item.date_Closed = data_row.F03B11_JCL != null ? FormatDate(data_row.F03B11_JCL) : "";
				    item.p_C = data_row.F03B11_POST;
				    mainObject.Array[i] = item;
				}
				mc.setPayloadJSON(mainObject);]]></script>
    <filter regex=".+" source="get-property('ERROR_MAPPING')">
        <then>
            <log level="custom">
                <property expression="get-property('ERROR_MAPPING')" name="JavaScriptError"/>
            </log>
        </then>
        <else>
            <log level="custom">
                <property expression="json-eval($)" name="Message Will store"/>
            </log>
            <store messageStore="JDBC_MessageStore"/>
            <log level="custom">
                <property expression="json-eval($)" name="Message To store"/>
            </log>
        </else>
    </filter>
</sequence>
